#
# Copyright (C) 2021 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    common: [build] # TODO: add 'release' once dependency-analysis works with tags
    behaviour: [build]

build:
  quality:
    filter:
      owner: graknlabs
      branch: master
    build-analysis:
      image: graknlabs-ubuntu-20.04
      command: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
          bazel run @graknlabs_dependencies//tool/sonarcloud:code-analysis -- \
          --project-key graknlabs_graql --branch=$GRABL_BRANCH --commit-id=$GRABL_COMMIT
    dependency-analysis:
      image: graknlabs-ubuntu-20.04
      command: |
        bazel run @graknlabs_dependencies//grabl/analysis:dependency-analysis
  correctness:
    build:
      image: graknlabs-ubuntu-20.04
      command: |
        bazel build //... --test_output=errors
        bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)')
    build-dependency:
      image: graknlabs-ubuntu-20.04
      command: |
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list
    test-graql-java:
      image: graknlabs-ubuntu-20.04
      command: |
        bazel test //java/... --test_output=errors
    deploy-maven-snapshot:
      filter:
        owner: graknlabs
        branch: master
      image: graknlabs-ubuntu-20.04
      dependencies: [build, build-dependency, test-graql-java]
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //grammar:deploy-maven -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //java/common:deploy-maven -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //java/pattern:deploy-maven -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //java/query:deploy-maven -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //java/parser:deploy-maven -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //java:deploy-maven -- snapshot
    test-deployment-maven:
      filter:
        owner: graknlabs
        branch: master
      image: graknlabs-ubuntu-20.04
      dependencies: [deploy-maven-snapshot]
      command: |
        sed -i -e "s/GRAQL_LANG_VERSION_MARKER/$GRABL_COMMIT/g" java/test/deployment/pom.xml
        cd java/test/deployment/ && mvn test

release:
  filter:
    owner: graknlabs
    branch: master
  validation:
    validate-dependencies:
      image: graknlabs-ubuntu-20.04
      command: bazel test //:release-validate-deps --test_output=streamed
  deployment:
    deploy-github:
      image: graknlabs-ubuntu-20.04
      command: |
        pip install certifi
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:create-notes -- graql $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $GRABL_COMMIT
    deploy-maven-release:
      image: graknlabs-ubuntu-20.04
      dependencies: [deploy-github]
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run --define version=$(cat VERSION) //grammar:deploy-maven -- release
        bazel run --define version=$(cat VERSION) //java/common:deploy-maven -- release
        bazel run --define version=$(cat VERSION) //java/pattern:deploy-maven -- release
        bazel run --define version=$(cat VERSION) //java/query:deploy-maven -- release
        bazel run --define version=$(cat VERSION) //java/parser:deploy-maven -- release
        bazel run --define version=$(cat VERSION) //java:deploy-maven -- release
